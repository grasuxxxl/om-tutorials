;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name om-tut.core, :imports nil, :requires {om om.core, om.core om.core, dom om.dom, om.dom om.dom, string clojure.string, clojure.string clojure.string}, :uses nil, :defs {app-state {:name om-tut.core/app-state, :file "src/om_basic/core.cljs", :line 8, :column 1, :end-line 8, :end-column 15, :meta {:file "/home/maximilian/Projects/om_basic/src/om_basic/core.cljs", :line 8, :column 6, :end-line 8, :end-column 15}}, middle-name {:protocol-inline nil, :meta {:file "/home/maximilian/Projects/om_basic/src/om_basic/core.cljs", :line 25, :column 7, :end-line 25, :end-column 18, :arglists (quote ([{:keys [middle middle-initial]}]))}, :name om-tut.core/middle-name, :variadic false, :file "src/om_basic/core.cljs", :end-column 18, :method-params ([p__20790]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [middle middle-initial]}]))}, display-name {:protocol-inline nil, :meta {:file "/home/maximilian/Projects/om_basic/src/om_basic/core.cljs", :line 30, :column 7, :end-line 30, :end-column 19, :arglists (quote ([{:keys [first last], :as contact}]))}, :name om-tut.core/display-name, :variadic false, :file "src/om_basic/core.cljs", :end-column 19, :method-params ([p__20795]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [first last], :as contact}]))}, registry-view {:protocol-inline nil, :meta {:file "/home/maximilian/Projects/om_basic/src/om_basic/core.cljs", :line 33, :column 7, :end-line 33, :end-column 20, :arglists (quote ([data owner]))}, :name om-tut.core/registry-view, :variadic false, :file "src/om_basic/core.cljs", :end-column 20, :method-params ([data owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 2, :fn-var true, :arglists (quote ([data owner]))}, t_om_tut$core20800 {:num-fields 4, :protocols #{om.core/IRenderState cljs.core/IMeta cljs.core/IWithMeta}, :name om-tut.core/t_om_tut$core20800, :file "src/om_basic/core.cljs", :type true, :anonymous true, :column 3, :line 34, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_om_tut$core20800 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRenderState cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([registry-view data owner meta20801])), :file nil}, :protocols #{om.core/IRenderState cljs.core/IMeta cljs.core/IWithMeta}, :name om-tut.core/->t_om_tut$core20800, :variadic false, :file "src/om_basic/core.cljs", :method-params ([registry-view data owner meta20801]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 34, :max-fixed-arity 4, :fn-var true, :arglists (quote ([registry-view data owner meta20801])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_om_tut$core20803 {:num-fields 4, :protocols #{om.core/IRenderState cljs.core/IMeta cljs.core/IWithMeta}, :name om-tut.core/t_om_tut$core20803, :file "src/om_basic/core.cljs", :type true, :anonymous true, :column 3, :line 34, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_om_tut$core20803 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRenderState cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([registry-view data owner meta20804])), :file nil}, :protocols #{om.core/IRenderState cljs.core/IMeta cljs.core/IWithMeta}, :name om-tut.core/->t_om_tut$core20803, :variadic false, :file "src/om_basic/core.cljs", :method-params ([registry-view data owner meta20804]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 34, :max-fixed-arity 4, :fn-var true, :arglists (quote ([registry-view data owner meta20804])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, on-js-reload {:protocol-inline nil, :meta {:file "/home/maximilian/Projects/om_basic/src/om_basic/core.cljs", :line 43, :column 7, :end-line 43, :end-column 19, :arglists (quote ([]))}, :name om-tut.core/on-js-reload, :variadic false, :file "src/om_basic/core.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 43, :end-line 43, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {om om.core, om.core om.core, dom om.dom, om.dom om.dom}, :cljs.analyzer/constants {:seen #{:1806 :professor :email owner :middle-initial :6946 data registry-view :type meta20804 meta20801 :6001 :middle :target :first quote :arglists :last :people :student :classes}, :order [:people :classes :type :first :last :email :student :middle-initial :middle :professor :6001 :6946 :1806 registry-view :arglists quote data owner meta20801 meta20804 :target]}, :doc nil}